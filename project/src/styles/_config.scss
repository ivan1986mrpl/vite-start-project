@use 'sass:map';

// USER VARIABLES SECTION

$accent: #a54fc9; // Accent Color
$gutter: 30px; // Global Gutter
$radius: 8px; // Default Radius
$fontsize: 16px; // Body Font Size
$lineheight: 1.65; // Document Line Height
$textcolor: #151515; // Text Color
$userfont: roboto-x, sans-serif; // User Font Family
$systemfont: -apple-system, BlinkMacSystemFont, Arial, sans-serif; // System Font Family

// FONTS LOAD SECTION

@mixin font($fname, $fstyle, $fweight, $furl) {
  @font-face {
    font-family: $fname;
    font-style: $fstyle;
    font-weight: $fweight;
    src: url($furl) format('woff2');
  }
}

@include font('roboto-x', normal, 400, '../assets/fonts/roboto-regular-webfont.woff2');
@include font('roboto-x', italic, 400, '../assets/fonts/roboto-italic-webfont.woff2');
@include font('roboto-x', normal, 700, '../assets/fonts/roboto-bold-webfont.woff2');
@include font('roboto-x', italic, 700, '../assets/fonts/roboto-bolditalic-webfont.woff2');

// MIXINS SECTION

// Breakpoints Mixin

$grid-breakpoints: (
  xs: 0,
  sm: 576px,
  md: 768px,
  lg: 992px,
  xl: 1200px,
  xxl: 1400px
);

@function breakpoint-min($name, $breakpoints: $grid-breakpoints) {
  $min: map.get($breakpoints, $name); @return if($min != 0, $min, null);
}
@function breakpoint-max($name, $breakpoints: $grid-breakpoints) {
  $max: map.get($breakpoints, $name); @return if($max and $max > 0, $max - .02, null);
}

@mixin media-breakpoint-up($name, $breakpoints: $grid-breakpoints) {
  $min: breakpoint-min($name, $breakpoints);
  @if $min { @media (min-width: $min) { @content; } } @else { @content; }
}
@mixin media-breakpoint-down($name, $breakpoints: $grid-breakpoints) {
  $max: breakpoint-max($name, $breakpoints);
  @if $max { @media (max-width: $max) { @content; } } @else { @content; }
}

// Custom Mixin



// RESET STYLES SECTION

body {
  font-family: $userfont;
  font-size: $fontsize;
  line-height: $lineheight;
  color: $textcolor;
  min-width: 320px;
  position: relative;
  overflow-x: hidden;
}

*,
*::before,
*::after {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

::placeholder {
  color: #666;
}

::selection {
  background-color: $accent;
  color: #fff;
}

button, input, select, textarea {
  line-height: inherit;
  outline: none;
}

input, textarea {
  &:focus:required:invalid {
    border-color: red;
  }
  &:required:valid {
    border-color: green;
  }
}

[type=button]:not(:disabled), [type=reset]:not(:disabled), [type=submit]:not(:disabled), button:not(:disabled) {
  cursor: pointer;
}
